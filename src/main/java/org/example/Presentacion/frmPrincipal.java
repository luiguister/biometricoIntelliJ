package org.example.Presentacion;

import org.example.BD.ConexionBD;
import org.example.MaterialSwing.MaterialButtomPanel;
import org.example.MaterialSwing.MaterialComboBox;
import org.example.MaterialSwing.MaterialSwitch;

import java.awt.Color;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.Image;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Calendar;
import java.util.GregorianCalendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.BorderFactory;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

public class frmPrincipal extends javax.swing.JFrame implements IFormularioReceptor {

    String codigoAsistencia = "";
    String usuario = "profesor";
    ImageIcon iconoError = new ImageIcon("src/Presentacion/imagenes/icons8-error-14.png");
    ImageIcon iconoOk = new ImageIcon("src/Presentacion/imagenes/icons8-ok-14.png");

    ConexionBD con = new ConexionBD();

    /**
     * Creates new form Home
     */
    public frmPrincipal() {
        setIconImage(new ImageIcon(getClass().getResource("imagenes/logoupc.png")).getImage());
        setExtendedState(MAXIMIZED_BOTH);
        initComponents();

        this.setLocationRelativeTo(this);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelContenedor = new javax.swing.JPanel();
        panelCard = new javax.swing.JPanel();
        panelPrincipal = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbMateria = new MaterialComboBox();
        cmbGrupo = new MaterialComboBox();
        switchAsistencia = new MaterialSwitch();
        jLabel4 = new javax.swing.JLabel();
        lblIconMateria = new javax.swing.JLabel();
        lblIconGrupo = new javax.swing.JLabel();
        btnRegistrar = new MaterialButtomPanel();
        jLabel12 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnModificar = new MaterialButtomPanel();
        jLabel14 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btnListado = new MaterialButtomPanel();
        jLabel15 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        btnAsistencia = new MaterialButtomPanel();
        jLabel16 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        btnListado1 = new MaterialButtomPanel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        panelTitulo = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        panelContenedor.setBackground(new java.awt.Color(255, 255, 255));
        panelContenedor.setMinimumSize(new java.awt.Dimension(811, 600));
        panelContenedor.setPreferredSize(new java.awt.Dimension(160, 128));

        panelCard.setBackground(new java.awt.Color(255, 255, 255));
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder1 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder1.setShowLeftShadow(true);
        dropShadowBorder1.setShowTopShadow(true);
        panelCard.setBorder(dropShadowBorder1);

        panelPrincipal.setBackground(new java.awt.Color(245, 245, 245));
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder2 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder2.setShowRightShadow(false);
        panelPrincipal.setBorder(dropShadowBorder2);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel1.setText("Elegir Materia:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Elegir Grupo:");

        cmbMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbMateriaActionPerformed(evt);
            }
        });

        cmbGrupo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbGrupoActionPerformed(evt);
            }
        });

        switchAsistencia.setBackgroundColor(new java.awt.Color(112, 182, 32));
        switchAsistencia.setOnOff(false);
        switchAsistencia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                switchAsistenciaMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                switchAsistenciaMouseEntered(evt);
            }
        });
        switchAsistencia.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                switchAsistenciaKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel4.setText("Toma de asistencia:");

        javax.swing.GroupLayout panelPrincipalLayout = new javax.swing.GroupLayout(panelPrincipal);
        panelPrincipal.setLayout(panelPrincipalLayout);
        panelPrincipalLayout.setHorizontalGroup(
                panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelPrincipalLayout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2)
                                .addComponent(lblIconMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cmbGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(lblIconGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(switchAsistencia, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51))
        );
        panelPrincipalLayout.setVerticalGroup(
                panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPrincipalLayout.createSequentialGroup()
                                .addGap(25, 25, 25)
                                .addGroup(panelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                                        .addComponent(cmbMateria, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cmbGrupo, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                                        .addComponent(jLabel1)
                                        .addComponent(jLabel2)
                                        .addComponent(switchAsistencia, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel4)
                                        .addComponent(lblIconMateria, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(lblIconGrupo, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(26, 26, 26))
        );

        btnRegistrar.setBackground(new java.awt.Color(255, 255, 255));
        btnRegistrar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 0), 1, true));
        btnRegistrar.setPreferredSize(new java.awt.Dimension(200, 120));
        btnRegistrar.setRippleColor(new java.awt.Color(51, 204, 0));
        btnRegistrar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnRegistrarMouseClicked(evt);
            }
        });

        jLabel12.setForeground(new java.awt.Color(51, 153, 0));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Presentacion/imagenes/icons8-añadir-usuario-grupo-mujer-hombre-96 (1).png"))); // NOI18N

        jLabel8.setBackground(new java.awt.Color(75, 146, 45));
        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel8.setText("Registro de Estudiante");
        jLabel8.setOpaque(true);

        javax.swing.GroupLayout btnRegistrarLayout = new javax.swing.GroupLayout(btnRegistrar);
        btnRegistrar.setLayout(btnRegistrarLayout);
        btnRegistrarLayout.setHorizontalGroup(
                btnRegistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(btnRegistrarLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel12)
                                .addContainerGap(32, Short.MAX_VALUE))
                        .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        btnRegistrarLayout.setVerticalGroup(
                btnRegistrarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(btnRegistrarLayout.createSequentialGroup()
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(31, Short.MAX_VALUE))
        );

        btnModificar.setBackground(new java.awt.Color(255, 255, 255));
        btnModificar.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 0), 1, true));
        btnModificar.setPreferredSize(new java.awt.Dimension(160, 200));
        btnModificar.setRippleColor(new java.awt.Color(51, 204, 0));
        btnModificar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnModificarMouseClicked(evt);
            }
        });

        jLabel14.setForeground(new java.awt.Color(75, 146, 45));
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Presentacion/imagenes/icons8-editar-usuario-masculino-96 (1)..png"))); // NOI18N

        jLabel10.setBackground(new java.awt.Color(75, 146, 45));
        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(255, 255, 255));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Modificar Estudiante");
        jLabel10.setOpaque(true);

        javax.swing.GroupLayout btnModificarLayout = new javax.swing.GroupLayout(btnModificar);
        btnModificar.setLayout(btnModificarLayout);
        btnModificarLayout.setHorizontalGroup(
                btnModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(btnModificarLayout.createSequentialGroup()
                                .addGap(30, 30, 30)
                                .addComponent(jLabel14)
                                .addContainerGap(32, Short.MAX_VALUE))
        );
        btnModificarLayout.setVerticalGroup(
                btnModificarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(btnModificarLayout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(31, Short.MAX_VALUE))
        );

        btnListado.setBackground(new java.awt.Color(255, 255, 255));
        btnListado.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 0), 1, true));
        btnListado.setPreferredSize(new java.awt.Dimension(160, 200));
        btnListado.setRippleColor(new java.awt.Color(51, 204, 0));
        btnListado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnListadoMouseClicked(evt);
            }
        });

        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Presentacion/imagenes/icons8-llamada-de-conferencia-96 (1).png"))); // NOI18N

        jLabel11.setBackground(new java.awt.Color(75, 146, 45));
        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setForeground(new java.awt.Color(255, 255, 255));
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel11.setText("Listado de Estudiante");
        jLabel11.setOpaque(true);

        javax.swing.GroupLayout btnListadoLayout = new javax.swing.GroupLayout(btnListado);
        btnListado.setLayout(btnListadoLayout);
        btnListadoLayout.setHorizontalGroup(
                btnListadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(btnListadoLayout.createSequentialGroup()
                                .addGap(26, 26, 26)
                                .addComponent(jLabel15)
                                .addContainerGap(36, Short.MAX_VALUE))
        );
        btnListadoLayout.setVerticalGroup(
                btnListadoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(btnListadoLayout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41))
        );

        btnAsistencia.setBackground(new java.awt.Color(255, 255, 255));
        btnAsistencia.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 0), 1, true));
        btnAsistencia.setPreferredSize(new java.awt.Dimension(160, 200));
        btnAsistencia.setRippleColor(new java.awt.Color(51, 204, 0));
        btnAsistencia.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnAsistenciaMouseClicked(evt);
            }
        });

        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Presentacion/imagenes/icons8-usuario-hombre-verificado-96 (1).png"))); // NOI18N

        jLabel19.setBackground(new java.awt.Color(75, 146, 45));
        jLabel19.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel19.setForeground(new java.awt.Color(255, 255, 255));
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Tomar Asistencia");
        jLabel19.setOpaque(true);

        javax.swing.GroupLayout btnAsistenciaLayout = new javax.swing.GroupLayout(btnAsistencia);
        btnAsistencia.setLayout(btnAsistenciaLayout);
        btnAsistenciaLayout.setHorizontalGroup(
                btnAsistenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel19, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(btnAsistenciaLayout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(jLabel16)
                                .addContainerGap(31, Short.MAX_VALUE))
        );
        btnAsistenciaLayout.setVerticalGroup(
                btnAsistenciaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(btnAsistenciaLayout.createSequentialGroup()
                                .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41))
        );

        btnListado1.setBackground(new java.awt.Color(255, 255, 255));
        btnListado1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(255, 153, 0), 1, true));
        btnListado1.setPreferredSize(new java.awt.Dimension(160, 200));
        btnListado1.setRippleColor(new java.awt.Color(51, 204, 0));
        btnListado1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnListado1MouseClicked(evt);
            }
        });

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Presentacion/imagenes/icons8-estadísticas-96.png"))); // NOI18N

        jLabel22.setBackground(new java.awt.Color(75, 146, 45));
        jLabel22.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel22.setForeground(new java.awt.Color(255, 255, 255));
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel22.setText("Informes");
        jLabel22.setOpaque(true);

        javax.swing.GroupLayout btnListado1Layout = new javax.swing.GroupLayout(btnListado1);
        btnListado1.setLayout(btnListado1Layout);
        btnListado1Layout.setHorizontalGroup(
                btnListado1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel22, javax.swing.GroupLayout.DEFAULT_SIZE, 158, Short.MAX_VALUE)
                        .addGroup(btnListado1Layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel21)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        btnListado1Layout.setVerticalGroup(
                btnListado1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(btnListado1Layout.createSequentialGroup()
                                .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jLabel21, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(41, 41, 41))
        );

        javax.swing.GroupLayout panelCardLayout = new javax.swing.GroupLayout(panelCard);
        panelCard.setLayout(panelCardLayout);
        panelCardLayout.setHorizontalGroup(
                panelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(panelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelCardLayout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnListado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnListado1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(btnAsistencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        panelCardLayout.setVerticalGroup(
                panelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelCardLayout.createSequentialGroup()
                                .addComponent(panelPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(panelCardLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(btnRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnModificar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnListado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnAsistencia, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(btnListado1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout panelContenedorLayout = new javax.swing.GroupLayout(panelContenedor);
        panelContenedor.setLayout(panelContenedorLayout);
        panelContenedorLayout.setHorizontalGroup(
                panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelContenedorLayout.createSequentialGroup()
                                .addContainerGap(45, Short.MAX_VALUE)
                                .addComponent(panelCard, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap(46, Short.MAX_VALUE))
        );
        panelContenedorLayout.setVerticalGroup(
                panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(panelContenedorLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(panelCard, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(23, 23, 23))
        );

        panelTitulo.setBackground(new java.awt.Color(255, 255, 255));
        org.jdesktop.swingx.border.DropShadowBorder dropShadowBorder3 = new org.jdesktop.swingx.border.DropShadowBorder();
        dropShadowBorder3.setShadowSize(10);
        dropShadowBorder3.setShowRightShadow(false);
        panelTitulo.setBorder(dropShadowBorder3);

        jPanel2.setBackground(new java.awt.Color(112, 182, 32));

        jLabel18.setFont(new java.awt.Font("Verdana", 1, 24)); // NOI18N
        jLabel18.setForeground(new java.awt.Color(255, 255, 255));
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel18.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Presentacion/imagenes/icnoPrincipal.png"))); // NOI18N
        jLabel18.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel18.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel17.setForeground(new java.awt.Color(255, 255, 255));
        jLabel17.setText("Ingenieria del sofware");

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 10)); // NOI18N
        jLabel13.setForeground(new java.awt.Color(255, 255, 255));
        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Presentacion/imagenes/logoupcmediano.png"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(75, 146, 45));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
                jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGap(0, 18, Short.MAX_VALUE)
        );

        jLabel20.setFont(new java.awt.Font("Verdana", 1, 36)); // NOI18N
        jLabel20.setForeground(new java.awt.Color(255, 255, 255));
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Control de Asistencia Biometrico");
        jLabel20.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        jLabel20.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addGap(83, 83, 83))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addComponent(jLabel17)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                .addComponent(jLabel13)
                                .addGap(18, 18, 18))
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
                jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(jPanel2Layout.createSequentialGroup()
                                                        .addGap(49, 49, 49)
                                                        .addComponent(jLabel20)
                                                        .addContainerGap(87, Short.MAX_VALUE))
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 13, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(28, 28, 28)))
                                        .addGroup(jPanel2Layout.createSequentialGroup()
                                                .addGap(6, 6, 6)
                                                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addContainerGap())))
        );

        javax.swing.GroupLayout panelTituloLayout = new javax.swing.GroupLayout(panelTitulo);
        panelTitulo.setLayout(panelTituloLayout);
        panelTituloLayout.setHorizontalGroup(
                panelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        panelTituloLayout.setVerticalGroup(
                panelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(panelContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, 1050, Short.MAX_VALUE)
                        .addComponent(panelTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(panelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, 0)
                                .addComponent(panelContenedor, javax.swing.GroupLayout.PREFERRED_SIZE, 412, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        // TODO add your handling code here:

        Connection cn;
        try {
            cn = con.conectar();
            cmbMateria.removeAllItems();
            Statement st = cn.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM materia");
            cmbMateria.addItem("");
            while (rs.next()) {
                cmbMateria.addItem(rs.getString("nombre") + " :  " + rs.getString("codigo"));
            }
            cn.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_formWindowOpened

    private void btnRegistrarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnRegistrarMouseClicked
        // TODO add your handling code here:
        if (!"".equals(cmbMateria.getSelectedItem().toString())) {
            if (!"".equals(cmbGrupo.getSelectedItem().toString())) {
                frmRegistroEstudiante frm = new frmRegistroEstudiante(this);
                frm.usuario = this.usuario;
                frm.grupo = this.cmbGrupo.getSelectedItem().toString();
                frm.setExtendedState(MAXIMIZED_BOTH);
                this.setVisible(false);
                frm.setVisible(true);
            } else {
                JOptionPane.showMessageDialog(this, "ningun grupo elegido", "Error de grupo", JOptionPane.ERROR_MESSAGE);
                cmbGrupo.requestFocus();
            }
        } else {
            JOptionPane.showMessageDialog(this, "ninguna materia elegido", "Error de grupo", JOptionPane.ERROR_MESSAGE);
            cmbMateria.requestFocus();
        }

    }//GEN-LAST:event_btnRegistrarMouseClicked

    private void cmbMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbMateriaActionPerformed
        // TODO add your handling code here:
        try {
            if (!"".equals(cmbMateria.getSelectedItem().toString())) {
                lblIconMateria.setIcon(iconoOk);
                Connection cn = con.conectar();
                cmbGrupo.removeAllItems();
                Statement st = cn.createStatement();
                String codigoMateria = (cmbMateria.getSelectedItem().toString().split(":")[1]).trim();
                System.out.println("materia codigo: " + codigoMateria);
                ResultSet rs = st.executeQuery("SELECT * FROM grupo WHERE materia_codigo='" + codigoMateria + "'");
                cmbGrupo.addItem("");
                while (rs.next()) {
                    String cad = rs.getString("nombre");
                    cad = cad + ": " + rs.getString("codigo");
                    System.out.println("cadena " + cad);
                    cmbGrupo.addItem(cad);
                }
            } else {
                lblIconMateria.setIcon(iconoError);
            }
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }
    }//GEN-LAST:event_cmbMateriaActionPerformed

    private void switchAsistenciaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_switchAsistenciaKeyReleased
        // TODO add your handling code here:

    }//GEN-LAST:event_switchAsistenciaKeyReleased

    private void switchAsistenciaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_switchAsistenciaMouseClicked
        // TODO add your handling code here:

        if (!"".equals(cmbMateria.getSelectedItem().toString())) {
            if (!"".equals(cmbGrupo.getSelectedItem().toString())) {
                String grupo = ((this.cmbGrupo.getSelectedItem().toString()).split(":")[1]).trim();
                String materia = ((this.cmbMateria.getSelectedItem().toString()).split(":")[1]).trim();
                Calendar c = new GregorianCalendar();
                String dia = Integer.toString(c.get(Calendar.DATE));
                String mes = Integer.toString(c.get(Calendar.MONTH) + 1);
                String annio = Integer.toString(c.get(Calendar.YEAR));
                codigoAsistencia = materia + grupo + ":" + dia + mes + annio;

                if ("inactiva".equals(tomaAsistencia())) {
                    switchAsistencia.setOnOff(false);
                    switchAsistencia.repaint();
                    switchAsistencia.validate();
                    JOptionPane.showMessageDialog(this, "Opcion denegada por que ya se ha cerrado el proceso de toma de asistencia \n Debes colocarte en contacto con el administrador para solucionar el incoveniente", "El proceso ya fue terminado", JOptionPane.WARNING_MESSAGE);

                } else {
                    cambioEstadoSwitch();
                }

            } else {
                switchAsistencia.setOnOff(false);
                switchAsistencia.repaint();
                switchAsistencia.validate();
                cmbGrupo.requestFocus();
                JOptionPane.showMessageDialog(this, "ningun grupo elegido", "Error de grupo", JOptionPane.ERROR_MESSAGE);

            }
        } else {
            switchAsistencia.setOnOff(false);
            switchAsistencia.repaint();
            switchAsistencia.validate();
            cmbMateria.requestFocus();
            JOptionPane.showMessageDialog(this, "ninguna materia elegido", "Error de grupo", JOptionPane.ERROR_MESSAGE);

        }

    }//GEN-LAST:event_switchAsistenciaMouseClicked

    private void cmbGrupoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbGrupoActionPerformed
        // TODO add your handling code here:
        if (!"".equals(cmbMateria.getSelectedItem().toString())) {
            try {
                if (!"".equals(cmbGrupo.getSelectedItem().toString())) {
                    lblIconGrupo.setIcon(iconoOk);
                    estadoInicialSwitch();
                } else {
                    lblIconGrupo.setIcon(iconoError);
                }
            } catch (Exception e) {
            }

        } else {
            lblIconMateria.setIcon(iconoError);
        }

    }//GEN-LAST:event_cmbGrupoActionPerformed

    private void switchAsistenciaMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_switchAsistenciaMouseEntered
        // TODO add your handling code here:
    }//GEN-LAST:event_switchAsistenciaMouseEntered

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        Object[] opciones = {"Si", "No"};
        int eleccion = JOptionPane.showOptionDialog(this, "estas seguro de cerrar la aplicacion", "Mensaje de Confirmacion",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.QUESTION_MESSAGE, null, opciones, "Si");
        if (eleccion == JOptionPane.YES_OPTION) {
            if (switchAsistencia.isOnOff()) {
                int opcion = JOptionPane.showOptionDialog(this, "El proceso de toma de asistencia esta activo \n Deseas finalizar la toma de asistencia?", "Mensaje de Confirmacion",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE, null, opciones, "Si");
                if (opcion == JOptionPane.YES_OPTION) {
                    finalizarTomaAsistencia();
                }
            }
            System.exit(0);
        } else {
            this.setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        }
    }//GEN-LAST:event_formWindowClosing

    private void btnModificarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnModificarMouseClicked
        // TODO add your handling code here:

        if (!"".equals(cmbMateria.getSelectedItem().toString())) {
            if (!"".equals(cmbGrupo.getSelectedItem().toString())) {

                frmModificarEstudiante frm = new frmModificarEstudiante(this);
                frm.usuario = usuario;
                frm.setExtendedState(MAXIMIZED_BOTH);
                frm.grupo = this.cmbGrupo.getSelectedItem().toString();
                this.setVisible(false);
                frm.setVisible(true);

            } else {
                JOptionPane.showMessageDialog(this, "ningun grupo elegido", "Error de grupo", JOptionPane.ERROR_MESSAGE);
                cmbGrupo.requestFocus();
            }
        } else {
            JOptionPane.showMessageDialog(this, "ninguna materia elegido", "Error de grupo", JOptionPane.ERROR_MESSAGE);
            cmbMateria.requestFocus();
        }
    }//GEN-LAST:event_btnModificarMouseClicked

    private void btnListadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnListadoMouseClicked
        // TODO add your handling code here:

        if (!"".equals(cmbMateria.getSelectedItem().toString())) {
            if (!"".equals(cmbGrupo.getSelectedItem().toString())) {

                frmListadoEstudiante frm = new frmListadoEstudiante(this);
                frm.grupo = this.cmbGrupo.getSelectedItem().toString();
                frm.usuario = usuario;

                System.out.println("le paso el grupo " + this.cmbGrupo.getSelectedItem().toString());
                frm.setExtendedState(MAXIMIZED_BOTH);
                this.setVisible(false);
                frm.setVisible(true);

            } else {
                JOptionPane.showMessageDialog(this, "ningun grupo elegido", "Error de grupo", JOptionPane.ERROR_MESSAGE);
                cmbGrupo.requestFocus();
            }
        } else {
            JOptionPane.showMessageDialog(this, "ninguna materia elegido", "Error de grupo", JOptionPane.ERROR_MESSAGE);
            cmbMateria.requestFocus();
        }
    }//GEN-LAST:event_btnListadoMouseClicked

    private void btnAsistenciaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnAsistenciaMouseClicked
        // TODO add your handling code here:
        if (!"".equals(cmbMateria.getSelectedItem().toString())) {
            if (!"".equals(cmbGrupo.getSelectedItem().toString())) {
                if (!"".equals(codigoAsistencia)) {
                    if (switchAsistencia.isOnOff()) {
                        frmAsistencia frm = new frmAsistencia(this);
                        frm.usuario = usuario;
                        frm.setExtendedState(MAXIMIZED_BOTH);
                        frm.grupo = this.cmbGrupo.getSelectedItem().toString();
                        frm.codigoAsistencia = codigoAsistencia;
                        this.setVisible(false);
                        frm.setVisible(true);

                    } else {
                        JOptionPane.showMessageDialog(this, "Por favor inicia la toma de asistencia para continuar con el proceso", "No se ha iniciado la asistencia", JOptionPane.ERROR_MESSAGE);
                        switchAsistencia.requestFocus();
                    }

                } else {
                    JOptionPane.showMessageDialog(this, "Por favor inicia la toma de asistencia para continuar con el proceso", "No se ha iniciado la asistencia", JOptionPane.ERROR_MESSAGE);
                    switchAsistencia.requestFocus();
                }

            } else {
                JOptionPane.showMessageDialog(this, "ningun grupo elegido", "Error de grupo", JOptionPane.ERROR_MESSAGE);
                cmbGrupo.requestFocus();
            }
        } else {
            JOptionPane.showMessageDialog(this, "ninguna materia elegido", "Error de grupo", JOptionPane.ERROR_MESSAGE);
            cmbMateria.requestFocus();
        }
    }//GEN-LAST:event_btnAsistenciaMouseClicked

    private void btnListado1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnListado1MouseClicked
        // TODO add your handling code here:
        if (!"".equals(cmbMateria.getSelectedItem().toString())) {
            if (!"".equals(cmbGrupo.getSelectedItem().toString())) {

                frmInformes frm = new frmInformes(this);
                frm.grupo = this.cmbGrupo.getSelectedItem().toString();
                frm.usuario = usuario;

                System.out.println("le paso el grupo " + this.cmbGrupo.getSelectedItem().toString());
                frm.setExtendedState(MAXIMIZED_BOTH);
                this.setVisible(false);
                frm.setVisible(true);

            } else {
                JOptionPane.showMessageDialog(this, "ningun grupo elegido", "Error de grupo", JOptionPane.ERROR_MESSAGE);
                cmbGrupo.requestFocus();
            }
        } else {
            JOptionPane.showMessageDialog(this, "ninguna materia elegido", "Error de grupo", JOptionPane.ERROR_MESSAGE);
            cmbMateria.requestFocus();
        }
    }//GEN-LAST:event_btnListado1MouseClicked
    public void setColor(JPanel panel) {
        panel.setBackground(new java.awt.Color(255, 255, 255));
        panel.setBorder(BorderFactory.createLineBorder(Color.WHITE));
    }

    public void resetColor(JPanel panel) {
        panel.setBackground(new java.awt.Color(204, 204, 204));
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(frmPrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frmPrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private MaterialButtomPanel btnAsistencia;
    private MaterialButtomPanel btnListado;
    private MaterialButtomPanel btnListado1;
    private MaterialButtomPanel btnModificar;
    private MaterialButtomPanel btnRegistrar;
    private MaterialComboBox cmbGrupo;
    private MaterialComboBox cmbMateria;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel lblIconGrupo;
    private javax.swing.JLabel lblIconMateria;
    private javax.swing.JPanel panelCard;
    private javax.swing.JPanel panelContenedor;
    private javax.swing.JPanel panelPrincipal;
    private javax.swing.JPanel panelTitulo;
    private MaterialSwitch switchAsistencia;
    // End of variables declaration//GEN-END:variables
    boolean existeAsistencia() {

        boolean b = false;
        try {
            Connection cn = con.conectar();
            PreparedStatement st = cn.prepareStatement("SELECT * FROM asistencia WHERE codigo_asistencia = ? ");
            st.setString(1, codigoAsistencia);
            //Ejecuta la sentencia
            ResultSet rs = st.executeQuery();
            if (rs.next()) {
                b = true;
            }
            cn.close();
        } catch (SQLException ex) {
            Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
        return b;
    }

    String tomaAsistencia() {
        String grupo = ((this.cmbGrupo.getSelectedItem().toString()).split(":")[1]).trim();
        String materia = ((this.cmbMateria.getSelectedItem().toString()).split(":")[1]).trim();
        Calendar c = new GregorianCalendar();
        String dia = Integer.toString(c.get(Calendar.DATE));
        String mes = Integer.toString(c.get(Calendar.MONTH) + 1);
        String annio = Integer.toString(c.get(Calendar.YEAR));
        codigoAsistencia = materia + grupo + ":" + dia + mes + annio;
        try {
            Connection cn = con.conectar();
            PreparedStatement st = cn.prepareStatement("SELECT * FROM asistencia WHERE codigo_asistencia = ? ");
            st.setString(1, codigoAsistencia);
            //Ejecuta la sentencia
            ResultSet rs = st.executeQuery();
            if (rs.next()) {
                if ("activa".equals(rs.getString("estado"))) {
                    System.out.println("esta activa");
                    return "activa";
                } else {
                    return "inactiva";
                }
            }
            cn.close();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, ex);
        }

        return "none";
    }

    void estadoInicialSwitch() {
        switch (tomaAsistencia()) {
            case "activa":
                switchAsistencia.setOnOff(true);
                switchAsistencia.repaint();
                switchAsistencia.validate();
                break;
            default:
                switchAsistencia.setOnOff(false);
                switchAsistencia.repaint();
                switchAsistencia.validate();
                break;
        }

    }

    void cambioEstadoSwitch() {

        Connection cn = con.conectar(); //establece la conexion con la BD

        String grupo = ((this.cmbGrupo.getSelectedItem().toString()).split(":")[1]).trim();
        String materia = ((this.cmbMateria.getSelectedItem().toString()).split(":")[1]).trim();
        Calendar c = new GregorianCalendar();
        String dia = Integer.toString(c.get(Calendar.DATE));
        String mes = Integer.toString(c.get(Calendar.MONTH) + 1);
        String annio = Integer.toString(c.get(Calendar.YEAR));
        codigoAsistencia = materia + grupo + ":" + dia + mes + annio;
        if (switchAsistencia.isOnOff()) {
            System.out.println("fui activado");
            crearAsistencia(cn, grupo);
        } else {
            System.out.println("me desactivaron");
            //Establece los valores para la sentencia SQL
            Object[] opciones = {"Si", "No"};
            int eleccion = JOptionPane.showOptionDialog(this, "Realmente Finalizaras el proceso de toma de asistencia", "Mensaje de Confirmacion",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.QUESTION_MESSAGE, null, opciones, "Si");
            if (eleccion == JOptionPane.YES_OPTION) {
                finalizarTomaAsistencia();
            }

        }
    }

    private void crearAsistencia(Connection cn, String grupo) {
        java.util.Date d = new java.util.Date();
        java.sql.Date fecha = new java.sql.Date(d.getTime());

        try {
            //Establece los valores para la sentencia SQL
            PreparedStatement guardarStmt = cn.prepareStatement("INSERT INTO asistencia(codigo_asistencia, fecha, grupo_codigo) VALUES (?,?,?)");

            guardarStmt.setString(1, codigoAsistencia);
            guardarStmt.setDate(2, fecha);
            guardarStmt.setString(3, grupo);
            //Ejecuta la sentencia
            try {
                guardarStmt.execute();
                cargarListaAsistencia(cn);
            } catch (SQLException e) {
                System.err.println("error"+e);
            }

            guardarStmt.close();
            guardarStmt.close();

        } catch (SQLException ex) {
            Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
            System.err.println("error " + ex);
        }

        System.out.println("codigo assitencia " + codigoAsistencia);
    }

    private void cargarListaAsistencia(Connection cn) {
        //Obtiene todos las estudiantes de la bd
        try {
            PreparedStatement consultaEstudianteStmt;
            String grupo = ((this.cmbGrupo.getSelectedItem().toString()).split(":")[1]).trim();
            consultaEstudianteStmt = cn.prepareStatement("SELECT * FROM estudiante WHERE grupo_codigo = ?");
            consultaEstudianteStmt.setString(1, grupo);
            //Ejecuta la sentencia
            ResultSet rs = consultaEstudianteStmt.executeQuery();

            // Recorremos el resultado, mientras haya registros para leer, y escribimos el resultado en pantalla.
            while (rs.next()) {
                //obtengo el codigo del estudiante
                String codigoEstudiante = rs.getString("codigo");

                PreparedStatement guardarStmt = cn.prepareStatement("INSERT INTO estudiante_asistencia(codigo_estudiante, codigo_asistencia) values(?,?)");

                guardarStmt.setString(1, codigoEstudiante);
                guardarStmt.setString(2, codigoAsistencia);

                //Ejecuta la sentencia
                guardarStmt.execute();

                guardarStmt.close();

                System.out.println(rs.getString(1) + " " + rs.getString(2) + " " + rs.getString(3));
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void finalizarTomaAsistencia() {
        Connection cn = con.conectar(); //establece la conexion con la BD
        actualizarListaAsistencia(cn);
        try {
            //Establece los valores para la sentencia SQL
            PreparedStatement modificarStmt = cn.prepareStatement("UPDATE asistencia SET estado=? WHERE codigo_asistencia=?");
            modificarStmt.setString(1, "inactiva");
            modificarStmt.setString(2, codigoAsistencia);

            //Ejecuta la sentencia
            modificarStmt.execute();
            modificarStmt.close();
            con.desconectar();
        } catch (SQLException ex) {
            Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }

    }

    private void actualizarListaAsistencia(Connection cn) {
        //Obtiene todos las estudiantes de la bd
        try {
            PreparedStatement consultaEstudianteStmt;
            String grupo = ((this.cmbGrupo.getSelectedItem().toString()).split(":")[1]).trim();
            consultaEstudianteStmt = cn.prepareStatement("SELECT * FROM estudiante WHERE grupo_codigo = ?");
            consultaEstudianteStmt.setString(1, grupo);
            //Ejecuta la sentencia
            ResultSet rs = consultaEstudianteStmt.executeQuery();

            // Recorremos el resultado, mientras haya registros para leer, y escribimos el resultado en pantalla.
            while (rs.next()) {
                //obtengo el codigo del estudiante
                String codigoEstudiante = rs.getString("codigo");
                //creo otro objeto con el que recorrere la tabla estudiente_asistencia
                PreparedStatement st = cn.prepareStatement("SELECT * FROM estudiante_asistencia WHERE codigo_estudiante = ? AND codigo_asistencia=?");
                st.setString(1, codigoEstudiante);
                st.setString(2, codigoAsistencia);
                ResultSet rsEM = st.executeQuery();

                if (!verificarAsistencia(codigoEstudiante)) {
                    //if no hay un registro en la tabla loagrego con la falla
                    if (!rsEM.next()) {
                        String Sql = "UPDATE estudiante_asistencia SET asistencia=? WHERE codigo_estudiante=? AND codigo_asistencia=?";
                        PreparedStatement modificarStmt = cn.prepareStatement(Sql);
                        modificarStmt.setString(1, "no");
                        modificarStmt.setString(2, codigoEstudiante);
                        modificarStmt.setString(3, codigoAsistencia);

                        //Ejecuta la sentencia
                        modificarStmt.execute();

                        modificarStmt.close();

                    }
                    System.out.println(rs.getString(1) + " " + rs.getString(2) + " " + rs.getString(3));
                }
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmPrincipal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    public boolean verificarAsistencia(String codigoEstudiante) {
        //Establece los valores para la sentencia SQL
        Connection c = con.conectar();
        try {
            //Obtiene todas las huellas de la bd
            PreparedStatement identificarStmt = c.prepareStatement("SELECT * FROM estudiante_asistencia WHERE codigo_estudiante=? AND codigo_asistencia=? AND asistencia='si'");
            identificarStmt.setString(1, codigoEstudiante);

            identificarStmt.setString(2, codigoAsistencia);

            ResultSet rs = identificarStmt.executeQuery();

            //Si se encuentra el nombre en la base de datos
            if (rs.next()) {
                return true;
            }
        } catch (SQLException ex) {
            Logger.getLogger(frmAsistencia.class.getName()).log(Level.SEVERE, null, ex);
        }
        return false;
    }

    @Override
    public void recibirCodigo(String texto) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}
